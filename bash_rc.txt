
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

parse_git_branch() {
	 git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
 }
 if [ "$color_prompt" = yes ]; then
	  PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[01;31m\]$(parse_git_branch)\[\033[00m\]\$ '
  else
	   PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w$(parse_git_branch)\$ '
   fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

#Alias
alias rootRT='ssh root@retailtower.com'
alias RT='ssh retailto@retailtower.com'
alias dbRT='ssh retailto@db.retailtower.com'
alias dbrootRT='ssh root@db.retailtower.com'
alias gitfetch='git fetch origin && git rebase origin'
alias grbp='git fetch origin && git rebase origin && git push'
alias ll='ls -alhF'

alias appRT='ssh ubuntu@app.retailtower.com'
alias devRT='ssh ubuntu@dev.retailtower.com'
alias schRT='ssh ubuntu@odwumayefo.retailtower.com'

export RT_ROOT="/home/adam"

alias tt="ssh ttabsolu@ttabsolutions.com"

alias rmd="rm -rf"

alias gi="git init"
alias gcg="git config --global"
alias ga="git add"
alias gs="git status"
alias gc="git commit -m"
alias gp="git push"
alias gl="git pull"
alias gcl="git clone"
alias gd="git diff"
alias gf="git fetch"
alias gst="git stash"
alias gct="git checkout"
alias gb="git branch"
alias gcp="git cherry-pick"

# git stash
# git cherry-pick

# Generator Stuff
alias pa="php artisan"
alias pas="php artisan serve"
alias pam="php artisan migrate"
alias pau="php artisan up"
alias pad="php artisan down"
alias pasp="php artisan serve --port="
alias pas="php artisan serve"
alias pamm="php artisan make:migration"
alias pami="php artisan migrate:install"
alias padbs="php artisan db:seed"
alias pat="php artisan tinker"
alias m:m="php artisan make:mdoel"
alias m:e="php artisan make:event"
alias m:j="php artisan make:job"
alias m:c="phpartisan make:controller"
alias m:r="php artisan make:request"
alias m:s="php artisan make:seed"
alias m:sr="php artisan make:seeder"
alias m:l="php artisan make:listener"
alias m:mw="php artisan make:middleware"
alias m:p="php artisan make:provider"

alias g:m="php artisan generate:model"
alias g:c="php artisan generate:controller"
alias g:v="php artisan generate:view"
alias g:s="php artisan generate:seed"
alias g:mig="php artisan generate:migration"
alias g:r="php artisan generate:resource"

alias pu="vendor/bin/phpunit"
alias puc="vendor/bin/phpunit --coverage-html dir"
alias laravel="~/.config/composer/vendor/bin/laravel"
alias rtbuild="cd retailtowerpro-frontend/ && ng build --env=prod && cd .. && gulp"

alias python="python3"

NPM_TOKEN=""

alias xdg-open="xo"
